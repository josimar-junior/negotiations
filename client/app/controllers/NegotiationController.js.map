{"version":3,"sources":["../../app-src/controllers/NegotiationController.js"],"names":["Negotiations","NegotiantionService","NegotiationsView","MessageView","Message","getNegotiationDao","InvalidDateException","DateConverter","Negotiation","Bind","NegotiationController","constructor","$","document","querySelector","bind","_inputDate","_inputQuantity","_inputValue","_negotiations","_message","_negotiationService","_init","then","dao","listAll","negotiations","forEach","negotiation","save","catch","error","text","event","preventDefault","_createNegotiation","_cleanForm","console","log","stack","message","toDate","value","parseInt","parseFloat","focus","clear","importNegotiations","getNegotiationsForThePeriod","filter","newNegotiation","toArray","some","existingNegotiation","equals"],"mappings":"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","file":"NegotiationController.js","sourcesContent":["import { Negotiations } from '../domain/negotiation/Negotiations.js';\nimport { NegotiantionService } from '../domain/negotiation/NegotiationService.js';\nimport { NegotiationsView } from '../ui/views/NegotiationsView.js';\nimport { MessageView } from '../ui/views/MessageView.js';\nimport { Message } from '../ui/models/Message.js';\nimport { getNegotiationDao } from '../util/DaoFactory.js';\nimport { InvalidDateException } from '../ui/converters/InvalidDateException.js';\nimport { DateConverter } from '../ui/converters/DateConverter.js';\nimport { Negotiation } from '../domain/negotiation/Negotiation.js';\nimport { Bind } from '../util/Bind.js';\n\n\nexport class NegotiationController {\n\n    constructor() {\n        const $ = document.querySelector.bind(document);\n\n        this._inputDate = $('#date');\n        this._inputQuantity = $('#quantity');\n        this._inputValue = $('#value');\n\n        this._negotiations = new Bind(new Negotiations(), new NegotiationsView('#negotiations'), 'save', 'clear');\n\n        this._message = new Bind(new Message(), new MessageView('#messageView'), 'text');\n\n        this._negotiationService = new NegotiantionService();\n\n        this._init();\n    }\n\n    _init() {\n        getNegotiationDao()\n            .then(dao => dao.listAll())\n            .then(negotiations =>\n                negotiations.forEach(negotiation =>\n                    this._negotiations.save(negotiation)))\n            .catch(error => this._message.text = error);\n    }\n\n    save(event) {\n        try {\n            event.preventDefault();\n\n            const negotiation = this._createNegotiation();\n\n            getNegotiationDao()\n                .then(dao => dao.save(negotiation))\n                .then(() => {\n                    this._negotiations.save(this._createNegotiation());\n                    this._message.text = 'Negotiation saved successfully';\n                    this._cleanForm();\n                }).catch(error => this._message.text = error);\n\n        } catch (error) {\n            console.log(error);\n            console.log(error.stack);\n            if (error instanceof InvalidDateException) {\n                this._message.text = error.message;\n            } else {\n                this._message.text = 'Error saving negotiation';\n            }\n        }\n    }\n\n    _createNegotiation() {\n        return new Negotiation(DateConverter.toDate(this._inputDate.value),\n            parseInt(this._inputQuantity.value),\n            parseFloat(this._inputValue.value));\n    }\n\n    _cleanForm() {\n        this._inputDate.value = '';\n        this._inputQuantity.value = 1;\n        this._inputValue.value = 0.0;\n        this._inputDate.focus();\n    }\n\n    clear() {\n        getNegotiationDao()\n            .then(dao => dao.clear())\n            .then(() => {\n                this._negotiations.clear();\n                this._message.text = 'Negotiations successfully deleted';\n            }).catch(error => this._message.text = error);\n    }\n\n    importNegotiations() {\n\n        this._negotiationService.getNegotiationsForThePeriod()\n            .then(negotiations => {\n                negotiations.filter(newNegotiation => !this._negotiations.toArray().some(existingNegotiation =>\n                    newNegotiation.equals(existingNegotiation)\n                )).forEach(negotiation => this._negotiations.save(negotiation));\n\n                this._message.text = 'Negotiations imported of the period successfully';\n            }).catch(error => this._message.text = error);\n    }\n\n}"]}